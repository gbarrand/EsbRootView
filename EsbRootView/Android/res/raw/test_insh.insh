
plots_show
gui_set_picking_mode

camera_set_ortho 1500
camera_set_znear 1
camera_set_zfar 10000
camera_set_focal 1000
camera_set_dx 10
camera_set_da 0.0174
camera_set_ds 0.99
camera_set_position 0 0 1000

app_open_geometry_file -doc_res neard_geo_full.root
neard_vis_geometry

neard_vis_floor
neard_vis_sarah

# order of transformations : first scale, then rotate and then translate.
avatar_neard_translate='460 -300 430'
avatar_neard_rotate='0 1 0 -1.570796'
scene_read_bsg -file=avatar_plant.bsg -translate="${avatar_neard_translate}" -rotate="${avatar_neard_rotate}" -scale=0.03

app_open_event_file -doc_res neard_evetest.root

gui_hide_main_menu

neard_set_camera
camera_set_orientation 0 1 0 1.57
#app_open_event_file /Users/barrand/Documents/EsbRootView/evetest.root

#/////////////////////////////////////////////////////////////////////////////////
#/// event : //////////////////////////////////////////////////////////////////////
#/////////////////////////////////////////////////////////////////////////////////
event_next

scene_clear_dynamic

event_plot WCDetectorPoint -modeling=neard

event_vis MCTrack -cut=(pdg==50000050) -color=red
event_vis MCTrack -cut=(pdg!=50000050)&&(mother_id!=-1)&&(is_secondary==false) -color=cyan -point_size=6 -modeling=arrow
event_vis MCTrack -cut=(pdg!=50000050)&&(mother_id!=-1)&&(is_secondary==true)&&(pdg!=22) -color=orange -point_size=6 -modeling=arrow -arrow_length=eval(E*1000.0)
event_vis MCTrack -cut=(pdg!=50000050)&&(mother_id!=-1)&&(is_secondary==true)&&(pdg==22) -color=orchid -point_size=6 -modeling=arrow -arrow_length=eval(E*1000.0)

event_vis MCTrack -cut=(mother_id==-1) -color=yellow -point_size=6 -modeling=arrow -arrow_text_scale=6 -arrow_radius=10

event_vis WCDetectorPoint -cut=pdg==50000050 -color=red
event_vis WCDetectorPoint -cut=pdg!=50000050 -color=lightblue -point_size=6

num_tracks=`event_count MCTrack -cut=pdg!=50000050&&mother_id!=-1&&is_secondary==true&&pdg==22`
gui_show_console ${num_tracks}

gui_set_console_layout -width=0.7 -height=0.07 -scale=1

calc cos(3.14)

event_vis MCTrack -cut=name=="'opticalphoton'" -color=red
event_vis MCTrack -cut=name!="'opticalphoton'"&&mother_id!=-1&&is_secondary==false -color=cyan -point_size=6 -modeling=arrow
event_vis MCTrack -cut=pdg!=50000050 -color=red
event_vis MCTrack -cut=pdg!=50000050 -color=blue -point_size=4 -modeling=wc_point
event_stats MCTrack -cut=pdg==50000050
event_plot MCTrack -cut=pdg==50000050 -filling=p

#///////////////////////////////
#/// -coloring : ///////////////
#///////////////////////////////
scene_set_clear_color 0.5 0.5 0.5 1
scene_set_clear_color lightgrey
cmap=grey_scale
cmap=violet_to_red
event_vis MCTrack -cut=pdg!=50000050&&mother_id!=-1&&is_secondary==true&&pdg!=22 -color=orange -point_size=6 -modeling=arrow -painting=${cmap} -coloring=E
event_vis MCTrack -cut=pdg!=50000050&&mother_id!=-1&&is_secondary==true&&pdg==22 -color=orchid -point_size=6 -modeling=arrow -painting=${cmap} -coloring=E

event_count MCTrack
event_count MCTrack -cut=pdg!=50000050&&mother_id!=-1&&is_secondary==true&&pdg==22
event_print MCTrack -cut=pdg!=50000050&&mother_id!=-1&&is_secondary==true&&pdg==22 E

event_plot WCDetectorPoint -cut=pdg==50000050 -filling=time
event_plot WCDetectorPoint -cut=pdg==50000050 -filling=p
event_count WCDetectorPoint -cut=pdg==50000050
event_vis WCDetectorPoint -cut=pdg==50000050&&index==100 -color=red
event_vis WCDetectorPoint -cut=pdg!=50000050 -color=orange -point_size=4 -modeling=mc_track
event_count WCDetectorPoint -cut=pdg!=50000050
event_print WCDetectorPoint -cut=pdg!=50000050

event_vis WCDetectorPoint -cut=time<100 -color=red
event_vis WCDetectorPoint -cut=time>=100 -color=yellow

# painting according to P :
event_vis WCDetectorPoint -cut=pdg==50000050 -coloring=p -painting=violet_to_red
# -painting=grey_scale
# -painting=grey_scale_inverse
# -painting=by_value
# P cherenkov min 1.77014e-9, max 1.04999-8.
color_mapping_1='lightgrey 1.77014e-9 cyan 4.7e-9 green 7.7e-9 orange 1.04999e-8 red'
color_mapping_1='cyan 4.7e-9 orange'
event_vis WCDetectorPoint -cut=pdg==50000050 -coloring=p -painting=by_value -color_mapping="${color_mapping_1}"

echo "debug : scene_add_insh_anim : 000"
scene_add_insh_anim -time_min=0 -time_max=25 -delay=10 -end_begin=false
scene_add_insh_anim -time_min=400 -time_max=445 -delay=10 -end_begin=false

echo "debug : scene_add_insh_anim : 001"
time_min=`event_time_min`
echo ${time_min}
time_max=`event_time_max`
echo ${time_max}
set -x
scene_add_insh_anim -time_min=${time_min} -time_max=${time_max} -delay=10 -end_begin=false
set +x

echo "debug : scene_add_insh_anim : 002"
time_min=`event_time_min`
time_max=`event_time_max`
time_max=`calc ${time_min}+(${time_max}-${time_min})/20`
echo ${time_max}
scene_add_insh_anim -time_min=${time_min} -time_max=${time_max} -delay=20 -end_begin=false

time_min=`event_time_min`
gui_show_console ${time_min}

style_load_file -res EsbRootView.style

#/////////////////////////////////////////////////////////////////////////////////////////////
#/////////////////////////////////////////////////////////////////////////////////////////////
#/////////////////////////////////////////////////////////////////////////////////////////////
echo `app_dir -res`
echo `app_dir -doc`
echo `app_dir -tmp`
echo `app_dir -out`
echo `app_dir -start`
echo `app_dir`

home_dir=`sys_home_dir`

out_dir=`app_dir -out`
event_index=`event_index`

file=${out_dir}/out_${event_index}.bsg
scene_write_to_bsg ${file}
file=${out_dir}/out_${event_index}_static.bsg
scene_write_static_to_bsg ${file}
file=${out_dir}/out_${event_index}_dynamic.bsg
scene_write_dynamic_to_bsg ${file}

#/////////////////////////////////////////////////////////////////////////////////////////////
#/////////////////////////////////////////////////////////////////////////////////////////////
#/////////////////////////////////////////////////////////////////////////////////////////////
out_dir=`app_dir -out`
event_index=`event_index`

file=${out_dir}/out_${event_index}_inzb.ps
scene_write_to_paper -format=inzb_ps ${file}

file=${out_dir}/out_${event_index}_gl2ps.pdf
scene_write_to_paper -format=gl2ps_pdf ${file}

file=${out_dir}/out_${event_index}_inzb.jpeg
scene_write_to_paper ${file}

gui_hide_camera_menu
gui_hide_console
plots_hide

file=${out_dir}/out_${event_index}.png
window_to_png -bpp=4 ${file}
window_to_png ${file}

file=${out_dir}/out_${event_index}_bpp3.png
window_to_png -bpp=3 ${file}

file=${out_dir}/out_${event_index}.jpeg
window_to_jpeg ${file}

gui_show_camera_menu

set -d
set +d
set -v
set +v

gui_text line_0 line_1 line_2
gui_scroll_text line_0 line_1 line_2 line_3 line_4 line_5 line_6 line_7
gui_hide_main_menu

echo aaa#bbb  #xxx
echo "aaa#bbb" uuu#xxx
echo 'aaa#bbb' xxx#yyyyy

set

my_env='uuu'
export my_env
printenv

calc 2+3
let xxx=2+3
echo ${xxx}
let xxx=${xxx}+6
echo ${xxx}

compgen -c
compgen -b
type
type echo
type -t echo

camera_reset
camera_stop_anim
camera_start_anim move_roll_plus
camera_stop_anim
camera_start_anim move_zoom_in_out
camera_stop_anim
camera_start_anim -cycle_secs=3 move_zoom_in_out
camera_stop_anim
camera_stop_anim
camera_stop_anim
camera_start_anim move_zoom_in_out_rot
camera_stop_anim
