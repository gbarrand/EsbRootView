// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file inlib.license for terms.

#ifndef inlib_ishell
#define inlib_ishell

#include <string>
#include <vector>
#include <ostream>
#include <sstream>

namespace inlib {

class ishell {
public:
  virtual ~ishell() {}
public:
  virtual void warn(const std::string&,bool /*a_to_stop*/ = true) = 0;
  virtual void out_begin() = 0;
  virtual void out(const std::string&,bool /*a_append*/ = false,bool /*a_endl*/ = true) = 0;
  virtual void unix_print(const std::vector<std::string>&,size_t /*a_spaces*/ = 2) const = 0;
  virtual std::ostream& out() const = 0;
public:
  template <class T>
  void out_num(const T& a_v,bool a_append = false,bool a_endl = true)  {
    std::ostringstream oss;
    oss.str().clear();
    oss << a_v;
    out(oss.str(),a_append,a_endl);
  }
};

}

#endif
